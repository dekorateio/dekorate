# Copyright 2018 The original authors.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
name: Integration Tests

env:
  MAVEN_ARGS: -B -e

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  cache:
    name: Cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m")"
        shell: bash
      - name: Cache .m2 registry
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ steps.get-date.outputs.date }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Install artifacts
        run: ./mvnw -f pom.xml ${MAVEN_ARGS} -DskipTests clean install
  kubernetes:
    name: Kubernetes Build
    needs: cache
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes: [v1.31.1]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m")"
        shell: bash
      - name: Cache .m2 registry
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ steps.get-date.outputs.date }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Setup Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.13.0
        with:
          minikube version: v1.34.0
          kubernetes version: ${{ matrix.kubernetes }}
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: 'docker'
          start args: '--force'
      - name: Setup Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Install the Service Binding Operator
        run: |
          curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.18.3/install.sh | bash -s v0.18.3
          kubectl create -f https://operatorhub.io/install/service-binding-operator.yaml
          until [[ "Succeeded" == `kubectl get csv -n operators | grep service-binding-operator | awk -F' ' '{print $7}'` ]]; do echo "Waiting for SBO"; sleep 5; done
          kubectl get csv -n operators | grep service-binding-operator | awk -F" " '{print $7}'
      - name: Install Knative
        run: |
          kubectl apply -f https://github.com/knative/serving/releases/download/knative-v1.15.1/serving-crds.yaml
          kubectl apply -f https://github.com/knative/serving/releases/download/knative-v1.15.1/serving-core.yaml
      - name: Install and Run Integration Tests
        run: |
          eval $(minikube docker-env)
          ./mvnw -B clean install -Presources -Pwith-examples -Pwith-tests -Pwith-service-binding-examples -Pwith-knative-examples -Pwith-kubernetes-specific-examples -Duser.name=noregistry -Dformat.skip=true -Dkubernetes.image-pull-policy=IfNotPresent
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R manifests-k8s-jvm${{ matrix.java }}.zip 'classes/META-INF/dekorate/*'
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ci-manifests
          path: manifests-k8s-jvm${{ matrix.java }}.zip
